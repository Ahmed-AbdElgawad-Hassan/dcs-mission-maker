const { Resolver } = require("@stoplight/json-ref-resolver");
const axios = require("axios");
const { readJson, writeFile, writeJson } = require("fs-extra");
const { resolve } = require("path");
const { stringify } = require("javascript-stringify");
const debug = require("debug")("dcs-mission-maker");

const main = async () => {
  const resolver = new Resolver({
    resolvers: {
      file: {
        resolve: async (ref) => {
          const abspath = resolve(__dirname, ref.path());
          debug("Resolving %s as %s", abspath);
          const data = await readJson(abspath);
          debug("Resolved data %s", abspath);
          return data;
        },
      },
      https: {
        resolve: async (ref) => {
          debug("Resolving %s", ref);
          const { data } = await axios.get(ref.href());
          debug("Resolved data %s", ref);
          return data;
        },
      },
    },
  });

  debug("Building JSON Bundle");
  const { result } = await resolver.resolve({
    $ref: "./me_db.json",
  });

  const dest = resolve(__dirname, "../src/me_db.ts");
  debug("Successfully Build JSON bundle, writing ts to dest %s", dest);
  await writeFile(
    resolve(__dirname, "../src/me_db.ts"),
    [
      "// THIS FILE IS AUTOMATICALLY GENERATED",
      "// DO NOT EDIT",
      `export const ME_DB = ${stringify(result)} as const`,
    ].join("\n"),
  );
  debug("Writing local bundle %s", dest);
  await writeJson(resolve(__dirname, "me_db.bundle.json"), result);
};

main();
